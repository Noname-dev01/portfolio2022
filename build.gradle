buildscript {
	ext{
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id 'java'
	//querydsl 플러그인 추가
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'portfolio2022'
version = '1.0.2-SNAPSHOT-'+new Date().format("yyyyMMddHHmmss")
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	implementation 'org.springframework.boot:spring-boot-configuration-processor'
	implementation 'org.springframework.boot:spring-boot-devtools'
	//spring security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
	//Thymeleaf에서 Spring-Security의 문법이나 형식을 지원하는 확장팩 라이브러리
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	//매핑을 도와주는 라이브러리
	implementation 'org.modelmapper:modelmapper:3.1.1'
	//스프링 데이터 jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//타임리프
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	//검증
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5'
	//querydsl
	implementation 'com.querydsl:querydsl-apt'
	implementation 'com.querydsl:querydsl-jpa'
	//lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	//h2 database
	implementation 'com.h2database:h2'
	//mariadb
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
}

tasks.named('test') {
	useJUnitPlatform()
}

/**
 * queryDsl 설정 추가
 */
//queryDsl에서 사용할 경로 설정
def querydslDir = "$buildDir/generated/querydsl"
//JPA 사용 여부와 사용할 경로를 설정
querydsl{
	library = "com.querydsl:querydsl-apt"
	jpa = true
	querydslSourcesDir = querydslDir
}
//build 시 사용할 sourceSet 추가
sourceSets {
	main.java.srcDir querydslDir
}
//querydsl 컴파일시 사용할 옵션 설정
compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}
//querydsl이 compileClassPath를 상속하도록 설정
configurations {
	compileOnly{
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

jar{
	enabled = false
}